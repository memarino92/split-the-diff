import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useState, useRef } from 'react';
import Headline from '../components/Headline';
import TotalCard from '../components/TotalCard';
import Footer from '../components/Footer';
import ResultCard from '../components/ResultCard';
import shortid from 'shortid';

export default function Home() {
  //declare state variables
  const [totalOne, setTotalOne] = useState(0);
  const [totalTwo, setTotalTwo] = useState(0);

  const [arrayOfExpensesOne, _setArrayOfExpensesOne] = useState([]);
  const arrayOfExpensesOneRef = useRef(arrayOfExpensesOne);
  const setArrayOfExpensesOne = (data) => {
    arrayOfExpensesOneRef.current = data;
    _setArrayOfExpensesOne(data);
  };

  const [arrayOfExpensesTwo, _setArrayOfExpensesTwo] = useState([]);
  const arrayOfExpensesTwoRef = useRef(arrayOfExpensesTwo);
  const setArrayOfExpensesTwo = (data) => {
    arrayOfExpensesTwoRef.current = data;
    _setArrayOfExpensesTwo(data);
  };

  //set refs
  const nameInputOneRef = useRef(null);
  const nameInputTwoRef = useRef(null);

  //declare event handlers
  const onTotalOneSubmit = (values, form) => {
    values.amount = Number(values.amount);
    values.id = shortid.generate();
    setArrayOfExpensesOne([...arrayOfExpensesOneRef.current, values]);
    setTotalOne(
      arrayOfExpensesOneRef.current.reduce(
        (total, num) => total + num.amount,
        0
      )
    );
    form.reset();
    nameInputOneRef.current.focus();
  };
  const onTotalTwoSubmit = (values, form) => {
    values.amount = Number(values.amount);
    values.id = shortid.generate();
    setArrayOfExpensesTwo([...arrayOfExpensesTwo, values]);
    setTotalTwo(
      arrayOfExpensesTwoRef.current.reduce(
        (total, num) => total + num.amount,
        0
      )
    );
    form.reset();
    nameInputTwoRef.current.focus();
  };

  const removeExpenseOne = (id) => {
    const newExpenses = arrayOfExpensesOne.filter(
      (expense) => expense.id !== id
    );
    setArrayOfExpensesOne(newExpenses);
    setTotalOne(
      arrayOfExpensesOneRef.current.reduce(
        (total, num) => total + num.amount,
        0
      )
    );
  };
  const removeExpenseTwo = (id) => {
    const newExpenses = arrayOfExpensesTwo.filter(
      (expense) => expense.id !== id
    );
    setArrayOfExpensesTwo(newExpenses);
    setTotalTwo(
      arrayOfExpensesTwoRef.current.reduce(
        (total, num) => total + num.amount,
        0
      )
    );
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Split the Diff</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <Headline />

        <div className={styles.grid}>
          <TotalCard
            title='Total One'
            onSubmit={onTotalOneSubmit}
            arrayOfExpenses={arrayOfExpensesOne}
            removeExpense={removeExpenseOne}
            total={totalOne}
            nameInputRef={nameInputOneRef}
          />

          <TotalCard
            title='Total Two'
            onSubmit={onTotalTwoSubmit}
            arrayOfExpenses={arrayOfExpensesTwo}
            removeExpense={removeExpenseTwo}
            total={totalTwo}
            nameInputRef={nameInputTwoRef}
          />

          <ResultCard totalOne={totalOne} totalTwo={totalTwo} />
        </div>
      </main>
      <Footer />
    </div>
  );
}
